---
- name: Initial bootstrap
  hosts: all

  vars:
    disktype: sd
    base_packages:
      - htop
      - aptitude
      - bind9-utils
      - dnsutils
      - apache2
      - libapache2-mod-php7.4
      - php7.4-cli
      - php7.4-curl
      - php7.4-gd
      - php7.4-json
      - php7.4-mbstring
      - php7.4-mysql
      - php7.4-xml
      - composer
      - prometheus
      - python3-pymysql
      - mariadb-client
      - rrdtool
  tasks:
    - name: Make www filesystem
      community.general.filesystem:
        fstype: ext4
        dev: "/dev/{{disktype}}b"
        opts: "-L app-www"
    - name: Create www mountpoint
      ansible.builtin.file:
        path: "/srv"
        state: directory
        mode: '0755'

    - name: Mount www disk
      ansible.posix.mount:
        path: "/srv"
        src: "LABEL=app-www"
        fstype: ext4
        state: mounted

    - name: Install packages
      apt:
        update_cache: yes
        name: "{{ base_packages }}"
      notify: Restart apache2

    - name: Enable the Apache2 modules
      community.general.apache2_module:
        state: present
        name: "{{ item }}"
      notify: Restart apache2
      loop:
        - headers
        - proxy
        - proxy_http
        - rewrite

    - name: Enable the Apache2 module
      community.general.apache2_module:
        state: present
        name: headers
      notify: Restart apache2
    
    - name: Remove default vhost
      ansible.builtin.file:
        path: /etc/apache2/sites-enabled/000-default.conf
        state: absent
      notify: Restart apache2
    
    - name: Deploy Prod vhost
      ansible.builtin.copy:
        src: production.conf
        dest: /etc/apache2/sites-enabled/production.conf
        owner: root
        group: root
        mode: '0644'
      notify: Restart apache2

    - name: Deploy Dev vhost
      ansible.builtin.copy:
        src: dev.conf
        dest: /etc/apache2/sites-enabled/dev.conf
        owner: root
        group: root
        mode: '0644'
      notify: Restart apache2

    - name: "Cron: nightly cleanup"
      ansible.builtin.cron:
        name: Nightly cleanup
        minute: "0"
        hour: "0"
        user: www-data
        job: "cd /srv/production/maintenance; php ClearOldData.php 2>&1 > /tmp/dataclearlog; php OldRequestCleanup.php 2>&1 > /tmp/oldreq-cleanup"
        cron_file: waca
    - name: "Cron: graph update"
      ansible.builtin.cron:
        name: Graph update
        minute: "*/5"
        user: www-data
        job: "/srv/dev/graph/update.sh > /tmp/graphupdlog 2>&1; /srv/dev/graph/graph.php > /tmp/graphlog 2>&1"
        cron_file: waca
    - name: "Cron: Job queue"
      ansible.builtin.cron:
        name: Job queue
        minute: "*/2"
        user: www-data
        job: "bash -l -c 'cd /srv/production/maintenance; php RunJobQueue.php &>/dev/null'"
        cron_file: waca
    - name: "Cron: Report link refresh"
      ansible.builtin.cron:
        name: Report link refresh
        hour: "11"
        minute: "0"
        user: www-data
        job: "cd /srv/dev/r; ./refresh.sh > /srv/dev/report/latesturls.txt"
        cron_file: waca

    - name: Prometheus configuration
      ansible.builtin.copy:
        content: |
          global:
            scrape_interval:     1m
            evaluation_interval: 1m
          rule_files:
          scrape_configs:
            - job_name: 'prometheus'
              metrics_path: '/prometheus/metrics'
              static_configs:
                - targets: ['localhost:9090']
            - job_name: acc
              static_configs:
                - targets: ['localhost:8080']
              metrics_path: '/other/prometheus.php'
        dest: /etc/prometheus/prometheus.yml
      notify: Restart prometheus
  handlers:
    - name: Restart apache2
      service:
        name: apache2
        state: restarted

    - name: Restart prometheus
      service:
        name: prometheus
        state: restarted
